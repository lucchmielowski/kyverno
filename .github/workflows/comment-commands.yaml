# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Issue and PR comment commands

permissions: {}

on:
  issue_comment:
    types: 
      - created
      - edited

jobs:
  execute:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: jpmcb/prow-github-actions@c44ac3a57d67639e39e4a4988b52049ef45b80dd # v2.0.0
        with:
          prow-commands: '/assign 
            /unassign
            /lgtm 
            /milestone'
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  cherry-pick:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/cherry-pick')
    permissions:
      issues: write
      pull-requests: write
      contents: write
    steps:
      - name: Check for Command
        id: command
        uses: lucchmielowski/slash-command-action@use-new-matcher
        continue-on-error: true
        with:
          command: cherry-pick
          reaction: "true"
          reaction-type: "eyes"
          allow-edits: "false"
          permission-level: write
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Comment
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event type: ${{ github.event.action }}"
          echo "Is PR?: ${{ github.event.issue.pull_request != null }}"
          echo "Command output: ${{ steps.command.outputs.command-name }}"

      - name: Check if PR is merged
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: check-merged
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return {
              merged: pr.data.merged,
              mergeCommit: pr.data.merge_commit_sha
            };

      - name: Extract target branch
        if: fromJSON(steps.check-merged.outputs.result).merged == true
        id: extract-branch
        run: echo "branch=$(echo '${{ github.event.comment.body }}' | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: comment pr unmerged
        if: ${{ steps.command.outputs.command-name != '' && fromJSON(steps.check-merged.outputs.result).merged == false }}
        uses: ben-z/actions-comment-on-issue@1.0.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Squashed commits from this PR will be cherry picked into the `${{steps.extract-branch.outputs.branch}}` branch(es) once merged.

      - name: Checkout repository
        if: fromJSON(steps.check-merged.outputs.result).merged == true
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Cherry Pick
        if: fromJSON(steps.check-merged.outputs.result).merged == true
        uses: ./.github/actions/cherry-pick
        id: cherry-pick
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          source-pr: ${{ github.event.issue.number }}
          target-branches: ${{ steps.extract-branch.outputs.branch }}
          merge-commit: ${{ fromJson(steps.check-merged.outputs.result).mergeCommit }}

      - name: comment cherry-pick fail
        if: ${{ steps.cherry-pick.outputs.success == false && steps.cherry-pick.outputs.git-logs != '' }}
        uses: ben-z/actions-comment-on-issue@1.0.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |            
            Cherry picking the merge commit `${{ fromJSON(steps.check-merged.outputs.result).mergeCommit}}` into `${{steps.extract-branch.outputs.branch}}` failed with:
            
            ```
            ${{ steps.cherry-pick.outputs.git-logs }}
            ```
            
